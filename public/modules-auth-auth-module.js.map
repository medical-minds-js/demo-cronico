{"version":3,"sources":["./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/reset-password-page/reset-password-page.component.ts","./src/app/modules/auth/reset-password-page/reset-password-page.component.html","./src/app/modules/auth/recovery-pass-page/recovery-pass-page.component.ts","./src/app/modules/auth/recovery-pass-page/recovery-pass-page.component.html","./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/registration-page/registration-page.component.ts","./src/app/modules/auth/registration-page/registration-page.component.html","./src/app/modules/auth/login-page/login-page.component.ts","./src/app/modules/auth/login-page/login-page.component.html"],"names":[],"mappings":"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","file":"modules-auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { RegistrationPageComponent } from './registration-page/registration-page.component';\nimport { ResetPasswordPageComponent } from './reset-password-page/reset-password-page.component';\nimport { RecoveryPassPageComponent } from './recovery-pass-page/recovery-pass-page.component';\nimport { SharedModule } from '@shared/shared.module';\n\n@NgModule({\n  declarations: [\n    LoginPageComponent,\n    RegistrationPageComponent,\n    ResetPasswordPageComponent,\n    RecoveryPassPageComponent,\n  ],\n  imports: [CommonModule, AuthRoutingModule, SharedModule],\n})\nexport class AuthModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reset-password-page',\n  templateUrl: './reset-password-page.component.html',\n  styleUrls: ['./reset-password-page.component.scss']\n})\nexport class ResetPasswordPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-12 login-top\">\n    <h1>Insumo cronico</h1>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-4 offset-4\">\n    <span class=\"image fit\"><img src=\"assets/images/pic02.jpg\" alt=\"\" /></span>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"box\">\n      <form method=\"post\" action=\"#\">\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <input\n              type=\"email\"\n              name=\"demo-email\"\n              id=\"demo-email\"\n              value=\"\"\n              placeholder=\"Email\"\n            />\n          </div>\n          <!-- Break -->\n          <div class=\"col-6 offset-3\">\n            <ul class=\"actions fit\">\n              <li>\n                <input type=\"button\" value=\"Enviar codigo\" class=\"primary\" />\n              </li>\n            </ul>\n          </div>\n        </div>\n      </form>\n      <div class=\"row\">\n        <div class=\"col-6 offset-3\">\n          <div class=\"midd-separator\"></div>\n        </div>\n        <div class=\"col-12 text-center\">\n          <a routerLink=\"/auth/login\">Ingresar</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recovery-pass-page',\n  templateUrl: './recovery-pass-page.component.html',\n  styleUrls: ['./recovery-pass-page.component.scss']\n})\nexport class RecoveryPassPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row space-top\">\n  <div class=\"col-12\">\n    <h1 class=\"text-center\">Recuperar contraseña</h1>\n  </div>\n</div>\n<div class=\"row gtr-200\">\n  <div class=\"col-12\">\n    <div class=\"box\">\n      <form method=\"post\" action=\"#\">\n        <div class=\"row gtr-uniform\">\n          <div class=\"col-12\">\n            <input\n              type=\"email\"\n              name=\"demo-email\"\n              id=\"demo-email\"\n              value=\"\"\n              placeholder=\"Contraseña\"\n            />\n          </div>\n          <div class=\"col-12\">\n            <input\n              type=\"email\"\n              name=\"demo-email\"\n              id=\"demo-email\"\n              value=\"\"\n              placeholder=\"Confirmar contraseña\"\n            />\n          </div>\n          <!-- Break -->\n          <div class=\"col-6 offset-3\">\n            <ul class=\"actions fit\">\n              <li>\n                <input type=\"submit\" value=\"Registrar\" class=\"primary\" />\n              </li>\n            </ul>\n          </div>\n        </div>\n      </form>\n      <div class=\"row\">\n        <div class=\"col-6 offset-3\">\n          <div class=\"bar-top\"></div>\n        </div>\n        <div class=\"col-12 text-center\">\n          <a href=\"/auth/login\">Ingresar</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { RegistrationPageComponent } from './registration-page/registration-page.component';\nimport { ResetPasswordPageComponent } from './reset-password-page/reset-password-page.component';\nimport { RecoveryPassPageComponent } from './recovery-pass-page/recovery-pass-page.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginPageComponent },\n  { path: 'register', component: RegistrationPageComponent },\n  { path: 'reset-pass', component: ResetPasswordPageComponent },\n  { path: 'recovery-pass', component: RecoveryPassPageComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { observer } from '@core/functions/observer.function';\r\nimport { UserLogin } from '@core/interfaces/user-login';\r\nimport { AppStoreService } from '@core/store/app-store.service';\r\nimport { SessionService } from '@services/session/session.service';\r\nimport { SwaService } from '@services/swa/swa.service';\r\nimport { Register } from '../interfaces/register.interface';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-registration-page',\r\n  templateUrl: './registration-page.component.html',\r\n  styleUrls: ['./registration-page.component.scss'],\r\n})\r\nexport class RegistrationPageComponent implements OnInit {\r\n  readonly form: FormGroup = new FormGroup({});\r\n  submited: boolean = false;\r\n  private inputName: FormControl = new FormControl();\r\n  private inputFirstSurname: FormControl = new FormControl();\r\n  private inputSecondSurname: FormControl = new FormControl();\r\n  private inputEmail: FormControl = new FormControl();\r\n  private inputPwd: FormControl = new FormControl();\r\n  private inputPwdConfirm: FormControl = new FormControl();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private swa: SwaService,\r\n    private store: AppStoreService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  initForm() {\r\n    this.inputName = new FormControl(null, [\r\n      Validators.required,\r\n      Validators.maxLength(200),\r\n    ]);\r\n    this.inputFirstSurname = new FormControl(null, [\r\n      Validators.required,\r\n      Validators.maxLength(200),\r\n    ]);\r\n    this.inputSecondSurname = new FormControl(null, [\r\n      Validators.required,\r\n      Validators.maxLength(200),\r\n    ]);\r\n    this.inputEmail = new FormControl(null, [\r\n      Validators.required,\r\n      Validators.email,\r\n      Validators.maxLength(100),\r\n    ]);\r\n    this.inputPwd = new FormControl(null, [\r\n      Validators.required,\r\n      Validators.minLength(6),\r\n      Validators.maxLength(200),\r\n    ]);\r\n    this.inputPwdConfirm = new FormControl(null, [\r\n      Validators.required,\r\n      Validators.minLength(6),\r\n      Validators.maxLength(200),\r\n    ]);\r\n\r\n    this.addControls();\r\n  }\r\n\r\n  addControls() {\r\n    Object.keys(this.form.controls).forEach((control) => {\r\n      this.form.removeControl(control);\r\n    });\r\n    this.form.addControl('inputName', this.inputName);\r\n    this.form.addControl('inputFirstSurname', this.inputFirstSurname);\r\n    this.form.addControl('inputSecondSurname', this.inputSecondSurname);\r\n    this.form.addControl('inputEmail', this.inputEmail);\r\n    this.form.addControl('inputPwd', this.inputPwd);\r\n    this.form.addControl('inputPwdConfirm', this.inputPwdConfirm);\r\n  }\r\n\r\n  onSubmit(data: any) {\r\n    this.submited = true;\r\n    this.validatePass();\r\n    if (this.form.valid) {\r\n      this.swa.loading();\r\n      const info: Register = {\r\n        name: this.form.get('inputName')?.value,\r\n        surname: this.form.get('inputFirstSurname')?.value,\r\n        secondSurname: this.form.get('inputSecondSurname')?.value,\r\n        email: this.form.get('inputEmail')?.value,\r\n        pass: this.form.get('inputPwd')?.value,\r\n      };\r\n      this.store.register(info).subscribe(\r\n        observer(this.swa, () => {\r\n          this.router.navigate(['/home']);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  validatePass() {\r\n    let pass: string = this.form.get('inputPwd')?.value;\r\n    let passConf: string = this.form.get('inputPwdConfirm')?.value;\r\n    if (pass == passConf) {\r\n      this.form.get('inputPwdConfirm')?.setErrors(null);\r\n      return true;\r\n    } else {\r\n      this.form.get('inputPwdConfirm')?.setErrors({\r\n        noMatch: true,\r\n      });\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","<div class=\"row space-top\">\r\n  <div class=\"col-12\">\r\n    <h1 class=\"text-center\">Crear cuenta</h1>\r\n  </div>\r\n</div>\r\n<div class=\"row gtr-200\">\r\n  <div class=\"col-12\">\r\n    <div class=\"box\">\r\n      <form\r\n        [formGroup]=\"form\"\r\n        novalidate\r\n        autocomplete=\"false\"\r\n        (ngSubmit)=\"onSubmit($event)\"\r\n      >\r\n        <div class=\"row gtr-uniform\">\r\n          <div class=\"col-12\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"inputName\"\r\n              id=\"inputName\"\r\n              value=\"\"\r\n              placeholder=\"Nombre\"\r\n              formControlName=\"inputName\"\r\n            />\r\n            <ng-container *ngIf=\"form.controls.inputName.errors && submited\">\r\n              <p *ngIf=\"form.controls.inputName.errors.required\" class=\"error\">\r\n                El campo nombre es obligatorio\r\n              </p>\r\n              <p *ngIf=\"form.controls.inputName.errors.maxLength\" class=\"error\">\r\n                No puede ingresar mas de 200 caracteres\r\n              </p>\r\n            </ng-container>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"inputFirstSurname\"\r\n              id=\"inputFirstSurname\"\r\n              value=\"\"\r\n              formControlName=\"inputFirstSurname\"\r\n              placeholder=\"Primer apellido\"\r\n            />\r\n            <ng-container\r\n              *ngIf=\"form.controls.inputFirstSurname.errors && submited\"\r\n            >\r\n              <p\r\n                *ngIf=\"form.controls.inputFirstSurname.errors.required\"\r\n                class=\"error\"\r\n              >\r\n                El campo es obligatorio\r\n              </p>\r\n              <p\r\n                *ngIf=\"form.controls.inputFirstSurname.errors.maxLength\"\r\n                class=\"error\"\r\n              >\r\n                No puede ingresar mas de 200 caracteres\r\n              </p>\r\n            </ng-container>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <input\r\n              type=\"email\"\r\n              name=\"inputSecondSurname\"\r\n              id=\"inputSecondSurname\"\r\n              value=\"\"\r\n              formControlName=\"inputSecondSurname\"\r\n              placeholder=\"Segundo apellido\"\r\n            />\r\n            <ng-container\r\n              *ngIf=\"form.controls.inputSecondSurname.errors && submited\"\r\n            >\r\n              <p\r\n                *ngIf=\"form.controls.inputSecondSurname.errors.required\"\r\n                class=\"error\"\r\n              >\r\n                El campo es obligatorio\r\n              </p>\r\n              <p\r\n                *ngIf=\"form.controls.inputSecondSurname.errors.maxLength\"\r\n                class=\"error\"\r\n              >\r\n                No puede ingresar mas de 200 caracteres\r\n              </p>\r\n            </ng-container>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <input\r\n              type=\"email\"\r\n              name=\"inputEmail\"\r\n              id=\"inputEmail\"\r\n              value=\"\"\r\n              formControlName=\"inputEmail\"\r\n              placeholder=\"Correo\"\r\n            />\r\n            <ng-container *ngIf=\"form.controls.inputEmail.errors && submited\">\r\n              <p *ngIf=\"form.controls.inputEmail.errors.required\" class=\"error\">\r\n                El campo correo es obligatorio\r\n              </p>\r\n              <p *ngIf=\"form.controls.inputEmail.errors.email\" class=\"error\">\r\n                El formato de correo es invalido\r\n              </p>\r\n            </ng-container>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <input\r\n              type=\"password\"\r\n              name=\"inputPwd\"\r\n              id=\"inputPwd\"\r\n              value=\"\"\r\n              formControlName=\"inputPwd\"\r\n              placeholder=\"Contraseña\"\r\n            />\r\n            <ng-container *ngIf=\"form.controls.inputPwd.errors && submited\">\r\n              <p *ngIf=\"form.controls.inputPwd.errors.required\" class=\"error\">\r\n                El campo contraseña es obligatorio\r\n              </p>\r\n              <p *ngIf=\"form.controls.inputPwd.errors.minLength\" class=\"error\">\r\n                Ingrese minimo 6 caracteres\r\n              </p>\r\n              <p *ngIf=\"form.controls.inputPwd.errors.maxLength\" class=\"error\">\r\n                No puede ingresar mas de 200 caracteres\r\n              </p>\r\n            </ng-container>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <input\r\n              type=\"password\"\r\n              name=\"inputPwdConfirm\"\r\n              id=\"inputPwdConfirm\"\r\n              value=\"\"\r\n              formControlName=\"inputPwdConfirm\"\r\n              placeholder=\"Confirmar contraseña\"\r\n            />\r\n            <ng-container\r\n              *ngIf=\"form.controls.inputPwdConfirm.errors && submited\"\r\n            >\r\n              <p\r\n                *ngIf=\"form.controls.inputPwdConfirm.errors.required\"\r\n                class=\"error\"\r\n              >\r\n                El campo contraseña es obligatorio\r\n              </p>\r\n              <p\r\n                *ngIf=\"form.controls.inputPwdConfirm.errors.minLength\"\r\n                class=\"error\"\r\n              >\r\n                Ingrese minimo 6 caracteres\r\n              </p>\r\n              <p\r\n                *ngIf=\"form.controls.inputPwdConfirm.errors.maxLength\"\r\n                class=\"error\"\r\n              >\r\n                No puede ingresar mas de 200 caracteres\r\n              </p>\r\n              <p\r\n                *ngIf=\"form.controls.inputPwdConfirm.errors.noMatch\"\r\n                class=\"error\"\r\n              >\r\n                Las contraseñas no coinciden\r\n              </p>\r\n            </ng-container>\r\n          </div>\r\n          <!-- Break -->\r\n          <div class=\"col-6 offset-3\">\r\n            <ul class=\"actions fit ml-0 mb-0\">\r\n              <li>\r\n                <button class=\"button primary solid\" type=\"submit\">\r\n                  Registrar\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div class=\"row\">\r\n        <div class=\"col-6 offset-3\">\r\n          <div class=\"midd-separator\"></div>\r\n        </div>\r\n        <div class=\"col-12 text-center\">\r\n          <a routerLink=\"/auth/login\">Ingresar</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { observer } from '@core/functions/observer.function';\r\nimport { UserLogin } from '@core/interfaces/user-login';\r\nimport { AppStoreService } from '@core/store/app-store.service';\r\nimport { SessionService } from '@services/session/session.service';\r\nimport { SwaService } from '@services/swa/swa.service';\r\nimport { Login } from '../interfaces/login.interface';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss'],\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n  readonly form: FormGroup = new FormGroup({});\r\n  submited: boolean = false;\r\n  private inputName: FormControl = new FormControl();\r\n  private inputPassword: FormControl = new FormControl();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private swa: SwaService,\r\n    private store: AppStoreService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  initForm() {\r\n    this.inputName = new FormControl(null, [\r\n      Validators.required,\r\n      Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$'),\r\n    ]);\r\n    this.inputPassword = new FormControl(null, [\r\n      Validators.required,\r\n      Validators.minLength(6),\r\n    ]);\r\n    this.addControls();\r\n  }\r\n\r\n  addControls() {\r\n    Object.keys(this.form.controls).forEach((control) => {\r\n      this.form.removeControl(control);\r\n    });\r\n    this.form.addControl('inputName', this.inputName);\r\n    this.form.addControl('inputPassword', this.inputPassword);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submited = true;\r\n    if (this.form.valid) {\r\n      this.swa.loading('Iniciando sesión...');\r\n      const info: Login = {\r\n        email: this.form.get('inputName')!.value,\r\n        pass: this.form.get('inputPassword')!.value,\r\n      };\r\n      this.store.login(info).subscribe(\r\n        observer(this.swa, () => {\r\n          this.router.navigate(['/home']);\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n","<app-header></app-header>\n<!-- <div class=\"row\">\n  <div class=\"col-4 offset-4 login-top\">\n    <span class=\"image fit\"><img src=\"assets/images/pic02.jpg\" alt=\"\" /></span>\n  </div>\n</div> -->\n<div class=\"row gtr-200 container-login\">\n  <div class=\"col-12 col-md-6 offset-0 offset-md-3\">\n    <div class=\"box\">\n      <form\n        [formGroup]=\"form\"\n        novalidate\n        autocomplete=\"off\"\n        (ngSubmit)=\"onSubmit()\"\n      >\n        <div class=\"row gtr-uniform\">\n          <div class=\"col-12\">\n            <label for=\"demo-category\">Correo</label>\n            <input\n              type=\"text\"\n              name=\"demo-name\"\n              id=\"demo-name\"\n              value=\"\"\n              formControlName=\"inputName\"\n              placeholder=\"Ingrese correo\"\n            />\n            <ng-container *ngIf=\"form.controls.inputName.errors && submited\">\n              <p *ngIf=\"form.controls.inputName.errors.required\" class=\"error\">\n                El campo correo es obligatorio\n              </p>\n              <p *ngIf=\"form.controls.inputName.errors.pattern\" class=\"error\">\n                El formato de correo es invalido\n              </p>\n            </ng-container>\n          </div>\n          <div class=\"col-12\">\n            <label for=\"demo-category\">Contraseña</label>\n            <input\n              type=\"password\"\n              name=\"demo-email\"\n              id=\"demo-email\"\n              value=\"\"\n              formControlName=\"inputPassword\"\n              placeholder=\"Ingrese contraseña\"\n            />\n            <ng-container\n              *ngIf=\"form.controls.inputPassword.errors && submited\"\n            >\n              <p\n                *ngIf=\"form.controls.inputPassword.errors.required\"\n                class=\"error\"\n              >\n                El campo contraseña es obligatorio\n              </p>\n              <p\n                *ngIf=\"form.controls.inputPassword.errors.minLength\"\n                class=\"error\"\n              >\n                Ingrese minimo 6 caracteres\n              </p>\n            </ng-container>\n          </div>\n          <!-- Break -->\n          <div class=\"col-6 offset-3\">\n            <input type=\"submit\" value=\"Ingresar\" class=\"button primary fit\" />\n          </div>\n        </div>\n      </form>\n      <div class=\"row\">\n        <div class=\"col-6 offset-3\">\n          <div class=\"midd-separator\"></div>\n        </div>\n        <div class=\"col-12 text-center\">\n          <a routerLink=\"/auth/register\">Crear cuenta</a>\n        </div>\n        <div class=\"col-12 text-center\">\n          <a routerLink=\"/auth/reset-pass\">Olvide la contraseña</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}