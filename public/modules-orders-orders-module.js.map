{"version":3,"sources":["./src/app/modules/orders/orders-detail/orders-detail.component.ts","./src/app/modules/orders/orders-detail/orders-detail.component.html","./src/app/modules/orders/components/order-edit-form/order-edit-form.component.ts","./src/app/modules/orders/components/order-edit-form/order-edit-form.component.html","./src/app/modules/orders/orders.module.ts","./src/app/modules/orders/orders-page/orders-page.component.ts","./src/app/modules/orders/orders-page/orders-page.component.html","./src/app/modules/orders/orders-routing.module.ts"],"names":[],"mappings":"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","file":"modules-orders-orders-module.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { observer } from '@core/functions/observer.function';\nimport { AppStoreService } from '@core/store/app-store.service';\nimport { AppState } from '@core/store/app-store.state';\nimport { dateToRead } from '@core/utils/date.parse';\nimport { SwaService } from '@services/swa/swa.service';\nimport { Observable, Subject } from 'rxjs';\nimport { OrderEditFormComponent } from '../components/order-edit-form/order-edit-form.component';\nimport { ModalService } from '@services/modal/modal.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-orders-detail',\n  templateUrl: './orders-detail.component.html',\n  styleUrls: ['./orders-detail.component.scss'],\n})\nexport class OrdersDetailComponent implements OnInit {\n  state$: Observable<AppState> = new Subject<AppState>();\n  protected ngUnsubscribe: Subject<void> = new Subject<void>();\n\n  @ViewChild('editSubDetail', { static: false })\n  buySupplyDetail: OrderEditFormComponent | undefined;\n  showQuantity: boolean = false;\n  showDelivery: boolean = false;\n  constructor(\n    private route: ActivatedRoute,\n    public store: AppStoreService,\n    public swa: SwaService\n  ) {\n    this.state$ = this.store.getState();\n  }\n\n  ngOnInit(): void {\n    this.swa.loading();\n    this.route.paramMap.subscribe((params) => {\n      const id = params.get('id');\n      this.store\n        .loadCurrentShopping(Number(id))\n        .pipe(takeUntil(this.ngUnsubscribe))\n        .subscribe(observer(this.swa));\n    });\n  }\n\n  showEditForm() {\n    this.showQuantity = true;\n  }\n\n  closeEditForm() {\n    this.showQuantity = false;\n  }\n\n  showEditDeliveryForm() {\n    this.showDelivery = true;\n  }\n\n  closeEditDeliveryForm() {\n    this.showDelivery = false;\n  }\n\n  updateDateDelivery(event: any) {\n    if (event.isCorrectDate) {\n      let message: string =\n        event.subscriptionStatusId == 3\n          ? 'Estos cambios aplicaran en la siguiente compra'\n          : '';\n      this.swa.confirm(\n        '¿Desea actualizar las cantidades de la suscripción?',\n        message,\n        (result) => {\n          if (result.value) {\n            this.swa.loading();\n            this.store.changeDeliveryDate(\n              event.isCorrectDate,\n              event.newDeliveryDate\n            );\n            this.store\n              .updateSubscriptionDelivery()\n              .pipe(takeUntil(this.ngUnsubscribe))\n              .subscribe(\n                observer(this.swa, () => {\n                  this.swa.close();\n                  this.closeEditDeliveryForm();\n                })\n              );\n          }\n        }\n      );\n    } else {\n      this.swa.info(\n        'La nueva fecha de entrega solo puede ser 2 días antes o despues de la fecha actual'\n      );\n    }\n  }\n\n  updateQuantities(event: any) {\n    let message: string =\n      event == 3 ? 'Estos cambios aplicaran en la siguiente compra' : '';\n    this.swa.confirm(\n      '¿Desea actualizar las cantidades de la suscripción?',\n      message,\n      (result) => {\n        if (result.value) {\n          this.swa.loading();\n          this.store\n            .updateSubscriptionQuantities()\n            .pipe(takeUntil(this.ngUnsubscribe))\n            .subscribe(\n              observer(this.swa, () => {\n                this.swa.close();\n                this.closeEditForm();\n              })\n            );\n        }\n      }\n    );\n  }\n}\n","<!-- Header -->\n<app-header\n  [title]=\"'Pedido ' + (state$ | async).currentSubscription.name\"\n  [icon]=\"'fa-arrow-left'\"\n  [openSidebar]=\"false\"\n  [link]=\"'/orders'\"\n></app-header>\n<!--Banner-->\n<section class=\"normal-padding\">\n  <div class=\"box\" *ngIf=\"!showQuantity && !showDelivery\">\n    <div class=\"row gtr-200\">\n      <ul class=\"alt items\">\n        <li>\n          <p>\n            <span> Estatus</span>\n            <span\n              *ngIf=\"(state$ | async).currentSubscription.subscriptionStatus\"\n            >\n              <b>{{\n                (state$ | async).currentSubscription.subscriptionStatus.name\n              }}</b>\n            </span>\n          </p>\n        </li>\n        <li>\n          <p>\n            <span> Periodo</span>\n            <span>\n              <b> {{ (state$ | async).currentSubscription.period }} dias</b>\n            </span>\n          </p>\n        </li>\n        <li *ngIf=\"(state$ | async).currentSubscription.nextDelivery\">\n          <p>\n            <span>Inicio de subscripción</span>\n            <span\n              ><b>\n                {{\n                  (state$ | async).currentSubscription.createdAt\n                    | date : \"dd/MM/yyyy\"\n                }}</b\n              >\n            </span>\n          </p>\n        </li>\n        <li *ngIf=\"(state$ | async).currentSubscription.nextDelivery\">\n          <p>\n            <span> Siguiente entrega</span>\n            <span\n              ><b>\n                {{\n                  (state$ | async).currentSubscription.nextDelivery\n                    | date : \"dd/MM/yyyy\"\n                }}</b\n              >\n            </span>\n          </p>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <div class=\"box\" *ngIf=\"showQuantity\">\n    <app-order-edit-form\n      #editSubDetail\n      [subscription]=\"(state$ | async).currentSubscription\"\n      [showQuantity]=\"true\"\n      (updateDateDelivery)=\"updateDateDelivery($event)\"\n      (updateQuantities)=\"updateQuantities($event)\"\n    >\n    </app-order-edit-form>\n  </div>\n  <div class=\"box\" *ngIf=\"showDelivery\">\n    <app-order-edit-form\n      #editSubDetail\n      [subscription]=\"(state$ | async).currentSubscription\"\n      [showDelivery]=\"true\"\n      (updateDateDelivery)=\"updateDateDelivery($event)\"\n      (updateQuantities)=\"updateQuantities($event)\"\n    >\n    </app-order-edit-form>\n  </div>\n  <div class=\"box\">\n    <table>\n      <thead>\n        <tr>\n          <th style=\"width: 30%\"></th>\n          <th>Cajas</th>\n          <th>Costo</th>\n          <th>Subtotal</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of (state$ | async).currentSubscription.items\">\n          <td>\n            <b>{{ item.product.name }}</b\n            ><br />\n            {{ item.product.description }}\n          </td>\n          <td>{{ item.pieces }}</td>\n          <td>${{ item.price }}</td>\n          <td>${{ item.subtotal }}</td>\n        </tr>\n      </tbody>\n      <tfoot>\n        <tr>\n          <td colspan=\"2\"></td>\n          <td>Subtotal</td>\n          <td>${{ (state$ | async).currentSubscription.subtotal }}</td>\n        </tr>\n        <tr>\n          <td colspan=\"2\"></td>\n          <td>Total</td>\n          <td>\n            <b>${{ (state$ | async).currentSubscription.total }}</b>\n          </td>\n        </tr>\n      </tfoot>\n    </table>\n  </div>\n  <div class=\"box\">\n    <div class=\"row gtr-200\">\n      <h3>Detalles de entrega</h3>\n      <h4>Dirección</h4>\n      <ul class=\"alt items\">\n        <li *ngIf=\"(state$ | async).currentSubscription.lastOrder\">\n          <p>\n            <span\n              ><b>\n                {{ (state$ | async).currentSubscription.lastOrder.location }}</b\n              ><br />\n              <b>\n                {{ (state$ | async).currentSubscription.lastOrder.comments }}</b\n              ><br />\n              <b>\n                {{\n                  (state$ | async).currentSubscription.lastOrder.reference\n                }}</b\n              >\n              <br />\n              <b>\n                Horario:\n                {{\n                  (state$ | async).currentSubscription.lastOrder.rangeTimes\n                }}</b\n              >\n            </span>\n          </p>\n        </li>\n      </ul>\n      <h4>Metodo de pago</h4>\n      <ul class=\"alt items\">\n        <li *ngIf=\"(state$ | async).currentSubscription.lastOrder.card\">\n          <p>\n            <span\n              ><b>\n                {{\n                  (state$ | async).currentSubscription.lastOrder.card.bank_name\n                }}</b\n              ><br />\n              <b>\n                {{\n                  (state$ | async).currentSubscription.lastOrder.card\n                    .card_number\n                }}</b\n              ><br />\n              <b>\n                {{\n                  (state$ | async).currentSubscription.lastOrder.card\n                    .expiration_month\n                }}\n                /{{\n                  (state$ | async).currentSubscription.lastOrder.card\n                    .expiration_year\n                }}</b\n              >\n            </span>\n          </p>\n        </li>\n      </ul>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Subscription } from '@core/interfaces/subscription.interface';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { AppState } from '@core/store/app-store.state';\r\nimport { AppStoreService } from '@core/store/app-store.service';\r\n\r\n@Component({\r\n  selector: 'app-order-edit-form',\r\n  templateUrl: './order-edit-form.component.html',\r\n  styleUrls: ['./order-edit-form.component.scss'],\r\n})\r\nexport class OrderEditFormComponent implements OnInit {\r\n  state$: Observable<AppState> = new Subject<AppState>();\r\n  protected ngUnsubscribe: Subject<void> = new Subject<void>();\r\n\r\n  @Input() subscription: Subscription = {} as Subscription;\r\n  @Input() showQuantity: boolean = false;\r\n  @Input() showDelivery: boolean = false;\r\n\r\n  @Output() updateDateDelivery = new EventEmitter();\r\n  @Output() updateQuantities = new EventEmitter();\r\n\r\n  readonly form: FormGroup = new FormGroup({});\r\n  submited: boolean = false;\r\n  inputDelivery: FormControl = new FormControl();\r\n  minDate: Date = new Date();\r\n  maxDate: Date = new Date();\r\n  isCorrectDate: boolean = false;\r\n  constructor(public store: AppStoreService) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.showDelivery) {\r\n      this.initForm();\r\n    }\r\n  }\r\n\r\n  initForm() {\r\n    this.inputDelivery = new FormControl(\r\n      { value: this.subscription.nextDelivery, disabled: false },\r\n      [Validators.required]\r\n    );\r\n    let currentDay: number = new Date(this.subscription.createdAt).getDate();\r\n\r\n    this.minDate.setDate(currentDay - 2);\r\n    this.maxDate.setDate(currentDay + 2);\r\n    this.addControls();\r\n  }\r\n\r\n  addControls() {\r\n    Object.keys(this.form.controls).forEach((control) => {\r\n      this.form.removeControl(control);\r\n    });\r\n    this.form.addControl('inputDelivery', this.inputDelivery);\r\n  }\r\n\r\n  addDose() {\r\n    this.store.addDoseSubscription();\r\n  }\r\n\r\n  resDose() {\r\n    this.store.resSubscription();\r\n  }\r\n\r\n  addPieces() {\r\n    this.store.addPiecesSubscription();\r\n  }\r\n\r\n  resPieces() {\r\n    this.store.resPiecesSubscription();\r\n  }\r\n\r\n  changeNextDate() {\r\n    let formDate: Date = new Date(this.subscription.createdAt);\r\n    let nextDate: Date = new Date(\r\n      this.form.get('inputDelivery')?.value + ' 00:00:00'\r\n    );\r\n    formDate.setMonth(nextDate.getMonth());\r\n    if (\r\n      (nextDate.getDate() < this.minDate.getDate() &&\r\n        formDate.getDate() > this.minDate.getDate()) ||\r\n      (nextDate.getDate() > this.maxDate.getDate() &&\r\n        formDate.getDate() < this.maxDate.getDate())\r\n    ) {\r\n      this.isCorrectDate = false;\r\n    } else {\r\n      this.isCorrectDate = true;\r\n    }\r\n  }\r\n\r\n  updateQuantity() {\r\n    this.updateQuantities.emit(this.subscription.subscriptionStatusId);\r\n  }\r\n\r\n  updateDelivery() {\r\n    const data = {\r\n      isCorrectDate: this.isCorrectDate,\r\n      subscriptionStatusId: this.subscription.subscriptionStatusId,\r\n      newDeliveryDate: this.form.get('inputDelivery')?.value,\r\n    };\r\n    this.updateDateDelivery.emit(data);\r\n  }\r\n}\r\n","<ng-container *ngIf=\"showQuantity\">\r\n  <div class=\"row\">\r\n    <div class=\"col\"></div>\r\n    <div class=\"col-2 text-center\">\r\n      <p>\r\n        <button class=\"link\" (click)=\"updateQuantity()\">Terminar</button>\r\n      </p>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-4\">\r\n      <h4 class=\"mb-2\">{{ subscription.product.name }}</h4>\r\n    </div>\r\n    <div class=\"col-3 text-center\">\r\n      <div class=\"col-12 text-center\"><h5>Dosis diaria</h5></div>\r\n      <button\r\n        type=\"button\"\r\n        class=\"button solid icon circle-icon fa-minus-circle\"\r\n        (click)=\"resDose()\"\r\n      ></button>\r\n      <form novalidate autocomplete=\"off\" class=\"inline-shopping\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"inputWeeks_{{ subscription.id }}\"\r\n          name=\"inputWeeks_{{ subscription.id }}\"\r\n          value=\"{{ subscription.dose }}\"\r\n          readonly\r\n        />\r\n      </form>\r\n      <button\r\n        type=\"button\"\r\n        class=\"button solid icon circle-icon fa-plus-circle\"\r\n        (click)=\"addDose()\"\r\n      ></button>\r\n    </div>\r\n    <div class=\"col-3 text-center\">\r\n      <div class=\"col-12 text-center\"><h5>Abastecimiento</h5></div>\r\n      <button\r\n        type=\"button\"\r\n        class=\"button solid icon circle-icon fa-minus-circle\"\r\n        (click)=\"resPieces()\"\r\n      ></button>\r\n      <form novalidate autocomplete=\"off\" class=\"inline-shopping\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"inputSupplying_{{ subscription.id }}\"\r\n          name=\"inputSupplying_{{ subscription.id }}\"\r\n          value=\"{{ subscription.pieces }}\"\r\n          readonly\r\n        />\r\n      </form>\r\n      <button\r\n        type=\"button\"\r\n        class=\"button solid icon circle-icon fa-plus-circle\"\r\n        (click)=\"addPieces()\"\r\n      ></button>\r\n      <div\r\n        class=\"col-12 text-center\"\r\n        *ngIf=\"subscription.suggestedPieces! > subscription.pieces\"\r\n      >\r\n        <p>Cajas recomendadas. {{ subscription.suggestedPieces }}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-2\">\r\n      <h4 class=\"mb-0 text-end\">${{ subscription.total }}</h4>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n<ng-container *ngIf=\"showDelivery\">\r\n  <form [formGroup]=\"form\" novalidate autocomplete=\"off\">\r\n    <div class=\"row\">\r\n      <div class=\"col\"></div>\r\n      <div class=\"col-3\">\r\n        <input\r\n          type=\"date\"\r\n          formControlName=\"inputDelivery\"\r\n          id=\"inputDelivery\"\r\n          name=\"inputDelivery\"\r\n          [minDate]=\"minDate\"\r\n          [maxDate]=\"maxDate\"\r\n          (change)=\"changeNextDate($event)\"\r\n        />\r\n      </div>\r\n      <div class=\"col-2 text-center\">\r\n        <p>\r\n          <button class=\"link\" (click)=\"updateDelivery()\">Terminar</button>\r\n        </p>\r\n      </div>\r\n      <div class=\"col\"></div>\r\n    </div>\r\n  </form>\r\n</ng-container>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { OrdersRoutingModule } from './orders-routing.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { OrdersPageComponent } from './orders-page/orders-page.component';\r\nimport { OrdersDetailComponent } from './orders-detail/orders-detail.component';\r\nimport { OrderEditFormComponent } from './components/order-edit-form/order-edit-form.component';\r\n\r\n@NgModule({\r\n  declarations: [OrdersPageComponent, OrdersDetailComponent, OrderEditFormComponent],\r\n  imports: [CommonModule, OrdersRoutingModule, SharedModule],\r\n})\r\nexport class OrdersModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { observer } from '@core/functions/observer.function';\nimport { Subscription } from '@core/interfaces/subscription.interface';\nimport { AppStoreService } from '@core/store/app-store.service';\nimport { AppState } from '@core/store/app-store.state';\nimport { dateToRead } from '@core/utils/date.parse';\nimport { SwaService } from '@services/swa/swa.service';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-orders-page',\n  templateUrl: './orders-page.component.html',\n  styleUrls: ['./orders-page.component.scss'],\n})\nexport class OrdersPageComponent implements OnInit {\n  state$: Observable<AppState> = new Subject<AppState>();\n  protected ngUnsubscribe: Subject<void> = new Subject<void>();\n  constructor(\n    private store: AppStoreService,\n    private swa: SwaService,\n    private router: Router\n  ) {\n    this.state$ = this.store.getState();\n  }\n\n  ngOnInit(): void {\n    this.swa.loading();\n    this.store\n      .loadShopping()\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(observer(this.swa));\n  }\n}\n","<!-- Header -->\n<app-header [title]=\"'Pedidos'\"></app-header>\n<!--Banner-->\n<section\n  class=\"normal-padding\"\n  *ngFor=\"let item of (state$ | async).subscriptions\"\n>\n  <div class=\"box mb-0\">\n    <div class=\"row gtr-200\">\n      <div class=\"col-12\">\n        <h3>{{ item.name }} {{ item.createdAt | date : \"dd/MM/yyyy\" }}</h3>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"row gtr-200\">\n          <ul class=\"alt items\">\n            <li>\n              <p>\n                <span> Estado</span>\n                <span\n                  ><b>\n                    {{ item.subscriptionStatus.name }}\n                    <i\n                      class=\"fas fa-credit-card\"\n                      *ngIf=\"item.subscriptionStatus.id == 1\"\n                    ></i>\n                    <i\n                      class=\"fas fa-times\"\n                      *ngIf=\"item.subscriptionStatus.id == 2\"\n                    ></i>\n                    <i\n                      class=\"fas fa-boxes\"\n                      *ngIf=\"item.subscriptionStatus.id == 3\"\n                    ></i>\n                    <i\n                      class=\"fas fa-check\"\n                      *ngIf=\"item.subscriptionStatus.id == 4\"\n                    ></i>\n                    <i\n                      class=\"fas fa-times\"\n                      *ngIf=\"item.subscriptionStatus.id == 5\"\n                    ></i></b\n                ></span>\n              </p>\n            </li>\n            <li>\n              <p>\n                <span> Periodo</span>\n                <span>\n                  <b> {{ item.period }} dias</b>\n                </span>\n              </p>\n            </li>\n            <li>\n              <p>\n                <span> Costo total</span>\n                <span>\n                  <b>{{ item.total }} </b>\n                </span>\n              </p>\n            </li>\n            <li>\n              <p>\n                <span> Productos</span>\n                <span>\n                  <b>{{ item.items.length }}</b>\n                </span>\n              </p>\n            </li>\n            <li>\n              <p>\n                <span> Dirección</span>\n              </p>\n              <p>\n                <span>\n                  <b>{{ item.orders[0].location }}</b>\n                  <br />\n                  <b>{{ item.orders[0].reference }}</b>\n                </span>\n              </p>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <a class=\"image block\"\n          ><img\n            *ngIf=\"item.items.length > 0\"\n            src=\"{{ item.items[0].product.images[0] }}\"\n            width=\"100%\"\n            alt=\"\"\n        /></a>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12 mt-3\">\n        <button\n          routerLink=\"/orders/detail/{{ item.id }}\"\n          class=\"button primary fit\"\n        >\n          Ver detalles\n        </button>\n      </div>\n    </div>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { OrdersPageComponent } from './orders-page/orders-page.component';\nimport { OrdersDetailComponent } from './orders-detail/orders-detail.component';\n\nconst routes: Routes = [\n  { path: '', component: OrdersPageComponent },\n  {\n    path: 'detail/:id',\n    component: OrdersDetailComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrdersRoutingModule {}\n"],"sourceRoot":"webpack:///"}